[{"/Users/carly/Desktop/goalsApp/goals-app/src/index.js":"1","/Users/carly/Desktop/goalsApp/goals-app/src/reportWebVitals.js":"2","/Users/carly/Desktop/goalsApp/goals-app/src/components/App.js":"3","/Users/carly/Desktop/goalsApp/goals-app/src/components/GoalItem.js":"4","/Users/carly/Desktop/goalsApp/goals-app/src/components/Navigation.js":"5","/Users/carly/Desktop/goalsApp/goals-app/src/components/SignIn.js":"6","/Users/carly/Desktop/goalsApp/goals-app/src/components/MyGoals.js":"7","/Users/carly/Desktop/goalsApp/goals-app/src/aws-exports.js":"8","/Users/carly/Desktop/goalsApp/goals-app/src/components/CreateGoal.js":"9"},{"size":1696,"mtime":1617848063292,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1617370892058,"results":"12","hashOfConfig":"11"},{"size":1292,"mtime":1618109335822,"results":"13","hashOfConfig":"11"},{"size":1101,"mtime":1618112912922,"results":"14","hashOfConfig":"11"},{"size":1896,"mtime":1618108420592,"results":"15","hashOfConfig":"11"},{"size":2556,"mtime":1618108118529,"results":"16","hashOfConfig":"11"},{"size":1843,"mtime":1618112697199,"results":"17","hashOfConfig":"11"},{"size":469,"mtime":1617811566465,"results":"18","hashOfConfig":"11"},{"size":1908,"mtime":1618111860410,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"zclb7u",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/carly/Desktop/goalsApp/goals-app/src/index.js",["43"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Amplify from \"aws-amplify\"\nimport awsconfig from \"./aws-exports\";\nimport { useContext, createContext } from \"react\";\n\n//Create the context\nexport const AppContext = createContext(null)\n\n//Allow us to access the context\nexport function useAppContext() {\n  return useContext(AppContext);\n}\n\n//Load the configuration\nAmplify.configure({\n  // OPTIONAL - if your API requires authentication \n  Auth: {\n      // REQUIRED - Amazon Cognito Identity Pool ID\n      identityPoolId: 'us-east-2:692c9e57-acfd-4c01-a5ba-cf1135584345',\n      // REQUIRED - Amazon Cognito Region\n      region: 'us-east-2', \n      // OPTIONAL - Amazon Cognito User Pool ID\n      userPoolId: 'us-east-2_xnY9fhh6b', \n      // OPTIONAL - Amazon Cognito Web Client ID (26-char alphanumeric string)\n      userPoolWebClientId: '411ja0db35tggns3lsbn6c7ol3',\n  },\n  API: {\n      endpoints: [\n          {\n              name: \"goals\",\n              endpoint: \"https://mrc769v197.execute-api.us-east-2.amazonaws.com/prod\",\n              region: \"us-east-2\"\n          },\n\n      ]\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["44","45"],"/Users/carly/Desktop/goalsApp/goals-app/src/reportWebVitals.js",[],"/Users/carly/Desktop/goalsApp/goals-app/src/components/App.js",["46","47"],"import './App.css';\nimport Navigation from './Navigation.js';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport MyGoals from './MyGoals.js';\nimport SignIn from './SignIn.js';\nimport { AppContext } from \"../index.js\";\nimport { useState, useEffect } from 'react';\nimport { Auth } from \"aws-amplify\";\n\nfunction App() {\n  //Allow to store the user session. Anything wrapped in AppContext.Provider allows us to access\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n  //Whenever component mounts, call onLoad() to look for current session and if true make sure user authentication.\n  useEffect(() => {\n    onLoad();\n  }, []);\n  async function onLoad() {\n    try {\n      await Auth.currentSession();\n      userHasAuthenticated(true);\n    }\n    catch (e) {\n      if (e !== 'No current user') {\n        alert(e);\n      }\n    }\n    setIsAuthenticating(false);\n  }\n\n  return (\n    <>\n      <AppContext.Provider value={{ isAuthenticated, userHasAuthenticated }}>\n        <Navigation></Navigation>\n        <Switch>\n          <Route path='/signin' component={SignIn} />\n          <Route path='/goals' component={MyGoals} />\n        </Switch>\n      </AppContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n","/Users/carly/Desktop/goalsApp/goals-app/src/components/GoalItem.js",["48","49","50","51","52"],"/Users/carly/Desktop/goalsApp/goals-app/src/components/Navigation.js",["53","54"],"import React from 'react';\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button } from 'react-bootstrap'\nimport { useAppContext, AppContext } from \"../index.js\"\nimport { Auth } from \"aws-amplify\";\nimport { useHistory } from \"react-router-dom\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nfunction Navigation() {\n    const { isAuthenticated, userHasAuthenticated } = useAppContext();\n    const history = useHistory();\n    \n    return (\n        <Navbar bg=\"light\" expand=\"lg\">\n            <LinkContainer to=\"/\">\n                <Navbar.Brand>Goals App</Navbar.Brand>\n            </LinkContainer>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    {isAuthenticated ? (\n                        <>\n                            <LinkContainer to=\"/goals\">\n                                <Nav.Link>My Goals</Nav.Link>\n                            </LinkContainer>\n                            <Nav.Link onClick={handleSignOut}>Sign Out</Nav.Link>\n                        </>\n                    ) :\n                        <LinkContainer to=\"/signin\">\n                            <Nav.Link>Sign In / Sign Up</Nav.Link>\n                        </LinkContainer>\n                    }\n                </Nav>\n                <Form inline>\n                    <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                    <Button variant=\"outline-success\">Search</Button>\n                </Form>\n            </Navbar.Collapse>\n        </Navbar >\n    )\n\n    async function handleSignOut() {\n        try {\n            await Auth.signOut();\n            userHasAuthenticated(false)\n            history.goBack();\n\n        }\n        catch (error) {\n            alert(\"Error signing out:\", error);\n        }\n    }\n\n}\n\nexport default Navigation","/Users/carly/Desktop/goalsApp/goals-app/src/components/SignIn.js",["55","56"],"import { Form, Button } from 'react-bootstrap';\nimport './SignIn.css';\nimport { Auth } from \"aws-amplify\";\nimport { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useAppContext } from \"../index.js\"\n\nfunction SignIn() {\n    const { userHasAuthenticated } = useAppContext();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const history = useHistory();\n\n    return (\n        <div className=\"center\">\n            <div>\n                <h1>Sign In / Sign Up</h1>\n                <Form>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control value={email} onChange={e => setEmail(e.target.value)} type=\"email\" placeholder=\"Enter email\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control value={password} onChange={e => setPassword(e.target.value)} type=\"password\" placeholder=\"Password\" />\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicCheckbox\">\n                        <Form.Check type=\"checkbox\" label=\"Check me out\" />\n                    </Form.Group>\n                    <Button variant=\"light\" type=\"submit\" onClick={handleSignUp}>\n                        Sign Up\n    </Button>\n                    <Button variant=\"light\" type=\"submit\" onClick={handleSignIn}>\n                        Sign In\n    </Button>\n                </Form>\n            </div>\n        </div >\n    )\n    async function handleSignUp(e) {\n        e.preventDefault()\n        try {\n            const user = await Auth.signUp({\n                username: email,\n                password: password,\n                attributes: {\n                    email: email,\n                }\n            })\n            let code = prompt(\"Please enter your verification code sent to email.\");\n            await Auth.confirmSignUp(email, code);\n            userHasAuthenticated(true);\n            history.push(\"/goals\");\n\n        }\n        catch (e) {\n            alert(e.message)\n\n        }\n    }\n\n    async function handleSignIn(e) {\n        e.preventDefault()\n        try {\n            const user = await Auth.signIn(email, password);\n            userHasAuthenticated(true);\n            history.push(\"/goals\");\n        } catch (error) {\n            alert('error signing in', error);\n        }\n    }\n\n}\n\nexport default SignIn","/Users/carly/Desktop/goalsApp/goals-app/src/components/MyGoals.js",["57","58"],"/Users/carly/Desktop/goalsApp/goals-app/src/aws-exports.js",[],"/Users/carly/Desktop/goalsApp/goals-app/src/components/CreateGoal.js",["59","60","61"],{"ruleId":"62","severity":1,"message":"63","line":9,"column":8,"nodeType":"64","messageId":"65","endLine":9,"endColumn":17},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"62","severity":1,"message":"70","line":3,"column":10,"nodeType":"64","messageId":"65","endLine":3,"endColumn":14},{"ruleId":"62","severity":1,"message":"71","line":13,"column":10,"nodeType":"64","messageId":"65","endLine":13,"endColumn":26},{"ruleId":"62","severity":1,"message":"72","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":13},{"ruleId":"62","severity":1,"message":"73","line":2,"column":15,"nodeType":"64","messageId":"65","endLine":2,"endColumn":24},{"ruleId":"62","severity":1,"message":"74","line":2,"column":26,"nodeType":"64","messageId":"65","endLine":2,"endColumn":29},{"ruleId":"62","severity":1,"message":"75","line":8,"column":12,"nodeType":"64","messageId":"65","endLine":8,"endColumn":21},{"ruleId":"62","severity":1,"message":"76","line":8,"column":23,"nodeType":"64","messageId":"65","endLine":8,"endColumn":30},{"ruleId":"62","severity":1,"message":"77","line":2,"column":23,"nodeType":"64","messageId":"65","endLine":2,"endColumn":34},{"ruleId":"62","severity":1,"message":"78","line":3,"column":25,"nodeType":"64","messageId":"65","endLine":3,"endColumn":35},{"ruleId":"62","severity":1,"message":"79","line":44,"column":19,"nodeType":"64","messageId":"65","endLine":44,"endColumn":23},{"ruleId":"62","severity":1,"message":"79","line":66,"column":19,"nodeType":"64","messageId":"65","endLine":66,"endColumn":23},{"ruleId":"62","severity":1,"message":"80","line":6,"column":10,"nodeType":"64","messageId":"65","endLine":6,"endColumn":14},{"ruleId":"62","severity":1,"message":"81","line":8,"column":27,"nodeType":"64","messageId":"65","endLine":8,"endColumn":31},{"ruleId":"62","severity":1,"message":"82","line":1,"column":10,"nodeType":"64","messageId":"65","endLine":1,"endColumn":15},{"ruleId":"62","severity":1,"message":"80","line":3,"column":10,"nodeType":"64","messageId":"65","endLine":3,"endColumn":14},{"ruleId":"62","severity":1,"message":"83","line":13,"column":13,"nodeType":"64","messageId":"65","endLine":13,"endColumn":20},"no-unused-vars","'awsconfig' is defined but never used.","Identifier","unusedVar","no-native-reassign",["84"],"no-negated-in-lhs",["85"],"'Link' is defined but never used.","'isAuthenticating' is assigned a value but never used.","'Row' is defined but never used.","'Container' is defined but never used.","'Col' is defined but never used.","'isNewGoal' is assigned a value but never used.","'setGoal' is assigned a value but never used.","'NavDropdown' is defined but never used.","'AppContext' is defined but never used.","'user' is assigned a value but never used.","'Auth' is defined but never used.","'Grid' is defined but never used.","'Modal' is defined but never used.","'newGoal' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]